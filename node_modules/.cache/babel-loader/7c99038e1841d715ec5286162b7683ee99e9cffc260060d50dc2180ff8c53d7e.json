{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonsulee/MyFolder/BCSD/ageofwar/src/components/Field.js\",\n  _s = $RefreshSig$();\nimport { styled } from \"styled-components\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ally, enemy, fieldWidth } from \"../utils/data/dataSet\";\nimport Nexus from \"./nexus/Nexus\";\nimport Unit from \"./unit/Unit\";\nimport { useEffect, useRef } from \"react\";\nimport { fieldUnit } from \"../store/slices/fieldUnit\";\n\n// export const unit = createSlice({\n//     name:\"unit\",\n//     initialState:[{\n//         id:Number(Date.now()),\n//         name:\"base\",\n//         team:\"ally\",\n//         maxHp:500,\n//         hp:400,\n//     },{\n//         id:Number(Date.now() + 10),\n//         name:\"base\",\n//         team:\"enemy\",\n//         maxHp:500,\n//         hp:500,\n//     }],\n//     reducers:{\n//         hit:(state, action)=>{\n//             const index = state.findIndex(obj => {\n//                 return Number(obj.id) === Number(action.index)\n//             })\n//             if(index > -1) state[index].hp = state[index].hp - action.damage\n//         },\n//         removeUnit:(state, action)=>{\n//             const index = state.findIndex(obj => {\n//                 return Number(obj.id) === Number(action.id)\n//             })\n//             state.splice(index, 1)\n//         },\n//         addUnit:(state, action)=>{\n//             state.push(action.data)\n//         },\n//         setIndex:(state, action)=>{\n//             state[action.index].index = action.index\n//         },\n//         setLegMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].leg = action.motion\n//         },\n//         setBodyMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].body = action.motion\n//         },\n//         setDeadMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].leg = action.motion\n//         }\n//     }\n// })\n// export const attacks = createSlice({\n//     name:\"attacks\",\n//     initialState:[],\n//     reducers:{\n//         addAttack:(state, action) => {\n//             state.push(action.data)\n//         },\n//         removeAttack:(state, action) => {\n//             const index = state.findIndex(e => e.id === action.index)\n//             state.splice(index, 1)\n//         }\n//     }\n// })\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    position: absolute;\n    left: -20px;\n    bottom: 50px;\n    width: ${fieldWidth + \"px\"};\n    height: 250px;\n    z-index: 2;\n    /* display: none; */\n`;\n_c = Container;\nexport default function Field() {\n  _s();\n  const fieldUnits = useSelector(state => state.fieldUnit.filter(e => e.id !== \"ally\" && e.id !== \"enemy\"));\n  const fieldRef = useRef(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      Array.from(fieldRef.current.children).map(e => {\n        console.log(e.getBoundingClientRect());\n        dispatch(fieldUnit.actions.updateLocation({\n          location: e.getBoundingClientRect(),\n          id: e.id\n        }));\n      });\n      console.log(fieldUnits);\n    }, 500);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    ref: fieldRef,\n    children: [/*#__PURE__*/_jsxDEV(Nexus, {\n      id: \"ally\",\n      className: ally\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Nexus, {\n      id: \"enemy\",\n      className: enemy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), fieldUnits.map(e => /*#__PURE__*/_jsxDEV(Unit, {\n      id: e.id,\n      team: e.team\n    }, e.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 39\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(Field, \"g1/uvzJOGWppEipc1AkoX2VEB2o=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c2 = Field;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Field\");","map":{"version":3,"names":["styled","createSlice","useDispatch","useSelector","ally","enemy","fieldWidth","Nexus","Unit","useEffect","useRef","fieldUnit","jsxDEV","_jsxDEV","Container","div","_c","Field","_s","fieldUnits","state","filter","e","id","fieldRef","dispatch","interval","setInterval","Array","from","current","children","map","console","log","getBoundingClientRect","actions","updateLocation","location","clearInterval","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","team","_c2","$RefreshReg$"],"sources":["/Users/hyeonsulee/MyFolder/BCSD/ageofwar/src/components/Field.js"],"sourcesContent":["import { styled } from \"styled-components\"\nimport {createSlice} from \"@reduxjs/toolkit\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ally, enemy, fieldWidth } from \"../utils/data/dataSet\"\nimport Nexus from \"./nexus/Nexus\";\nimport Unit from \"./unit/Unit\";\nimport { useEffect, useRef } from \"react\";\nimport { fieldUnit } from \"../store/slices/fieldUnit\";\n\n// export const unit = createSlice({\n//     name:\"unit\",\n//     initialState:[{\n//         id:Number(Date.now()),\n//         name:\"base\",\n//         team:\"ally\",\n//         maxHp:500,\n//         hp:400,\n//     },{\n//         id:Number(Date.now() + 10),\n//         name:\"base\",\n//         team:\"enemy\",\n//         maxHp:500,\n//         hp:500,\n//     }],\n//     reducers:{\n//         hit:(state, action)=>{\n//             const index = state.findIndex(obj => {\n//                 return Number(obj.id) === Number(action.index)\n//             })\n//             if(index > -1) state[index].hp = state[index].hp - action.damage\n//         },\n//         removeUnit:(state, action)=>{\n//             const index = state.findIndex(obj => {\n//                 return Number(obj.id) === Number(action.id)\n//             })\n//             state.splice(index, 1)\n//         },\n//         addUnit:(state, action)=>{\n//             state.push(action.data)\n//         },\n//         setIndex:(state, action)=>{\n//             state[action.index].index = action.index\n//         },\n//         setLegMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].leg = action.motion\n//         },\n//         setBodyMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].body = action.motion\n//         },\n//         setDeadMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].leg = action.motion\n//         }\n//     }\n// })\n// export const attacks = createSlice({\n//     name:\"attacks\",\n//     initialState:[],\n//     reducers:{\n//         addAttack:(state, action) => {\n//             state.push(action.data)\n//         },\n//         removeAttack:(state, action) => {\n//             const index = state.findIndex(e => e.id === action.index)\n//             state.splice(index, 1)\n//         }\n//     }\n// })\n\nconst Container = styled.div`\n    position: absolute;\n    left: -20px;\n    bottom: 50px;\n    width: ${fieldWidth + \"px\"};\n    height: 250px;\n    z-index: 2;\n    /* display: none; */\n`;\n\nexport default function Field(){\n    \n    const fieldUnits = useSelector(state => state.fieldUnit.filter(e => e.id !== \"ally\" && e.id !== \"enemy\"))\n    const fieldRef = useRef(null);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const interval = setInterval(() => {\n            \n            Array.from(fieldRef.current.children).map(e => {\n                console.log(e.getBoundingClientRect());\n                dispatch(fieldUnit.actions.updateLocation({location:e.getBoundingClientRect(), id:e.id}))\n            })\n            console.log(fieldUnits);\n        }, 500);\n        \n        return () => clearInterval(interval)\n    }, [])\n\n    return (\n        <Container ref={fieldRef}>\n            <Nexus id={\"ally\"} className={ally}></Nexus>\n            <Nexus id={\"enemy\"} className={enemy}></Nexus>\n            {\n                fieldUnits.map((e) => <Unit key={e.id} id={e.id} team={e.team}></Unit>)\n            }\n        </Container>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}