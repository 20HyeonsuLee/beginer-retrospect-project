{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { ally, enemy, nexusHp } from \"../../utils/data/dataSet\";\nimport { getIndex } from \"../../utils/functions/isRange\";\nexport const fieldUnit = createSlice({\n  name: \"fieldUnit\",\n  initialState: [{\n    id: \"ally\",\n    hp: 500,\n    team: ally,\n    location: null,\n    range: 100,\n    hitRange: 150\n  }, {\n    id: \"enemy\",\n    hp: 500,\n    team: enemy,\n    location: null,\n    range: 100,\n    hitRange: 150\n  }],\n  reducers: {\n    addUnit: (state, action) => {\n      state.push(action.payload.unit);\n    },\n    removeUnit: (state, action) => {\n      const index = getIndex(state, action.payload.id);\n      if (index > -1) state.splice(index, 1);\n    },\n    hitUnit: (state, action) => {\n      const index = getIndex(state, action.payload.id);\n      if (index > -1) state[index].hp -= action.payload.damage;\n    },\n    updateLocation: (state, action) => {\n      const index = state.findIndex(e => e.id.toString() === action.payload.id.toString());\n      if (index > -1) state[index].location = action.payload.location;\n    },\n    setUpperBody: (state, action) => {\n      const index = getIndex(state, action.payload.id);\n      if (index > -1) state[index].upperBody = action.payload.motion;\n    },\n    setLowerBody: (state, action) => {\n      const index = getIndex(state, action.payload.id);\n      if (index > -1) state[index].lowerBody = action.payload.motion;\n    }\n  }\n});","map":{"version":3,"names":["createSlice","ally","enemy","nexusHp","getIndex","fieldUnit","name","initialState","id","hp","team","location","range","hitRange","reducers","addUnit","state","action","push","payload","unit","removeUnit","index","splice","hitUnit","damage","updateLocation","findIndex","e","toString","setUpperBody","upperBody","motion","setLowerBody","lowerBody"],"sources":["/Users/hyeonsulee/MyFolder/BCSD/ageofwar/src/store/slices/fieldUnit.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { ally, enemy, nexusHp } from \"../../utils/data/dataSet\"\nimport { getIndex } from \"../../utils/functions/isRange\";\n\nexport const fieldUnit = createSlice({\n    name:\"fieldUnit\",\n    initialState:[{\n        id:\"ally\",\n        hp:500,\n        team:ally,\n        location:null,\n        range:100,\n        hitRange:150\n    },{\n        id:\"enemy\",\n        hp:500,\n        team:enemy,\n        location:null,\n        range:100,\n        hitRange:150\n    }],\n    reducers:{\n        addUnit:(state, action) => {\n            state.push(action.payload.unit)\n        },\n        removeUnit:(state, action) => {\n            const index = getIndex(state, action.payload.id)\n            if(index > -1) state.splice(index, 1)\n        },\n        hitUnit:(state, action) => {\n            const index = getIndex(state, action.payload.id)\n            if(index > -1) state[index].hp -= action.payload.damage\n        },\n        updateLocation:(state, action) => {\n            const index = state.findIndex(e =>  e.id.toString() === action.payload.id.toString())\n            if(index > -1) state[index].location = action.payload.location\n        },\n        setUpperBody:(state, action) => {\n            const index = getIndex(state, action.payload.id)\n            if(index > -1) state[index].upperBody = action.payload.motion\n        },\n        setLowerBody:(state, action) => {\n            const index = getIndex(state, action.payload.id)\n            if(index > -1) state[index].lowerBody = action.payload.motion\n        }\n    }\n})"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,EAAEC,KAAK,EAAEC,OAAO,QAAQ,0BAA0B;AAC/D,SAASC,QAAQ,QAAQ,+BAA+B;AAExD,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;EACjCM,IAAI,EAAC,WAAW;EAChBC,YAAY,EAAC,CAAC;IACVC,EAAE,EAAC,MAAM;IACTC,EAAE,EAAC,GAAG;IACNC,IAAI,EAACT,IAAI;IACTU,QAAQ,EAAC,IAAI;IACbC,KAAK,EAAC,GAAG;IACTC,QAAQ,EAAC;EACb,CAAC,EAAC;IACEL,EAAE,EAAC,OAAO;IACVC,EAAE,EAAC,GAAG;IACNC,IAAI,EAACR,KAAK;IACVS,QAAQ,EAAC,IAAI;IACbC,KAAK,EAAC,GAAG;IACTC,QAAQ,EAAC;EACb,CAAC,CAAC;EACFC,QAAQ,EAAC;IACLC,OAAO,EAACA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAACC,IAAI,CAAC;IACnC,CAAC;IACDC,UAAU,EAACA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMK,KAAK,GAAGlB,QAAQ,CAACY,KAAK,EAAEC,MAAM,CAACE,OAAO,CAACX,EAAE,CAAC;MAChD,IAAGc,KAAK,GAAG,CAAC,CAAC,EAAEN,KAAK,CAACO,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACzC,CAAC;IACDE,OAAO,EAACA,CAACR,KAAK,EAAEC,MAAM,KAAK;MACvB,MAAMK,KAAK,GAAGlB,QAAQ,CAACY,KAAK,EAAEC,MAAM,CAACE,OAAO,CAACX,EAAE,CAAC;MAChD,IAAGc,KAAK,GAAG,CAAC,CAAC,EAAEN,KAAK,CAACM,KAAK,CAAC,CAACb,EAAE,IAAIQ,MAAM,CAACE,OAAO,CAACM,MAAM;IAC3D,CAAC;IACDC,cAAc,EAACA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAMK,KAAK,GAAGN,KAAK,CAACW,SAAS,CAACC,CAAC,IAAKA,CAAC,CAACpB,EAAE,CAACqB,QAAQ,CAAC,CAAC,KAAKZ,MAAM,CAACE,OAAO,CAACX,EAAE,CAACqB,QAAQ,CAAC,CAAC,CAAC;MACrF,IAAGP,KAAK,GAAG,CAAC,CAAC,EAAEN,KAAK,CAACM,KAAK,CAAC,CAACX,QAAQ,GAAGM,MAAM,CAACE,OAAO,CAACR,QAAQ;IAClE,CAAC;IACDmB,YAAY,EAACA,CAACd,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMK,KAAK,GAAGlB,QAAQ,CAACY,KAAK,EAAEC,MAAM,CAACE,OAAO,CAACX,EAAE,CAAC;MAChD,IAAGc,KAAK,GAAG,CAAC,CAAC,EAAEN,KAAK,CAACM,KAAK,CAAC,CAACS,SAAS,GAAGd,MAAM,CAACE,OAAO,CAACa,MAAM;IACjE,CAAC;IACDC,YAAY,EAACA,CAACjB,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMK,KAAK,GAAGlB,QAAQ,CAACY,KAAK,EAAEC,MAAM,CAACE,OAAO,CAACX,EAAE,CAAC;MAChD,IAAGc,KAAK,GAAG,CAAC,CAAC,EAAEN,KAAK,CAACM,KAAK,CAAC,CAACY,SAAS,GAAGjB,MAAM,CAACE,OAAO,CAACa,MAAM;IACjE;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}