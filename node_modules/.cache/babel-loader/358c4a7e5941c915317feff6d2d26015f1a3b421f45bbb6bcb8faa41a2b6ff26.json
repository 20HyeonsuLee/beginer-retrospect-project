{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonsulee/MyFolder/BCSD/ageofwar/src/components/turret/Turret.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { styled } from \"styled-components\";\nimport targetImg from \"../../assets/images/turrets//target.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    display: flex;\n    position: absolute;\n    align-items: center;\n    justify-content: center;\n    width: 55px;\n    height: 55px;\n    left: ${props => props.location.left};\n    bottom: ${props => props.location.bottom};\n    z-index: 3;\n`;\n_c = Container;\nconst TurretImage = styled.img`\n    position: absolute;\n    width: 140px;\n    height: 140px;\n    transform: rotate( ${props => props.deg + \"deg\"});\n`;\n_c2 = TurretImage;\nconst TargetImage = styled.img`\n    position: absolute;\n    width: 55px;\n    height: 55px;\n    z-index: 10;\n    &:hover{\n        background-color: rgba(240, 240, 240, 0.5);\n    }\n`;\n_c3 = TargetImage;\nexport default function Turret({\n  location,\n  index,\n  team\n}) {\n  _s();\n  const status = useSelector(state => state.status[team]);\n  // status의 menu가 add인지 cell인지에 따라서 TargetImage의 컴포넌트 포함 여부를 결정한다.\n  // menu에 따라 TargetImage의 액션을 다르게 준다.\n  // add일 경우 status의 tower에 해당 터렛의 정보를 입력한다.\n  // 이때 해당 터렛의 정보는 ShopTurret에서 클릭한 터렛의 정보로 한다.\n  // cell일 경우 클릭한 Index의 tower의 정보를 터렛의 금액의 절반을 회수하고, null로 한다.\n\n  // 터렛의 범위에 FieldUnits의 상대 유닛이 들어오면 공격모션으로 변환 한다.\n  // 공격 속도에 맞게 투사체를 발사한다.\n  // 투사체는 상대 유닛에 적중하면 상대 유닛의 체력을 깎은 후 소멸한다.\n  return /*#__PURE__*/_jsxDEV(Container, {\n    location: location,\n    children: [/*#__PURE__*/_jsxDEV(TurretImage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), status.menu === \"add\" && status.tower[index] !== null ? /*#__PURE__*/_jsxDEV(TargetImage, {\n      src: targetImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 73\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 119\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Turret, \"GVUeGpr3Za8amOOf1RQAN5UgC0Q=\", false, function () {\n  return [useSelector];\n});\n_c4 = Turret;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TurretImage\");\n$RefreshReg$(_c3, \"TargetImage\");\n$RefreshReg$(_c4, \"Turret\");","map":{"version":3,"names":["useSelector","styled","targetImg","jsxDEV","_jsxDEV","Container","div","props","location","left","bottom","_c","TurretImage","img","deg","_c2","TargetImage","_c3","Turret","index","team","_s","status","state","children","fileName","_jsxFileName","lineNumber","columnNumber","menu","tower","src","_c4","$RefreshReg$"],"sources":["/Users/hyeonsulee/MyFolder/BCSD/ageofwar/src/components/turret/Turret.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { styled } from \"styled-components\";\nimport targetImg from \"../../assets/images/turrets//target.png\"\n\nconst Container = styled.div`\n    display: flex;\n    position: absolute;\n    align-items: center;\n    justify-content: center;\n    width: 55px;\n    height: 55px;\n    left: ${props => props.location.left};\n    bottom: ${props => props.location.bottom};\n    z-index: 3;\n`;\nconst TurretImage = styled.img`\n    position: absolute;\n    width: 140px;\n    height: 140px;\n    transform: rotate( ${props => props.deg + \"deg\"});\n`;\nconst TargetImage = styled.img`\n    position: absolute;\n    width: 55px;\n    height: 55px;\n    z-index: 10;\n    &:hover{\n        background-color: rgba(240, 240, 240, 0.5);\n    }\n`;\n\nexport default function Turret({location, index, team}){\n\n    const status = useSelector(state => state.status[team])\n    // status의 menu가 add인지 cell인지에 따라서 TargetImage의 컴포넌트 포함 여부를 결정한다.\n    // menu에 따라 TargetImage의 액션을 다르게 준다.\n    // add일 경우 status의 tower에 해당 터렛의 정보를 입력한다.\n    // 이때 해당 터렛의 정보는 ShopTurret에서 클릭한 터렛의 정보로 한다.\n    // cell일 경우 클릭한 Index의 tower의 정보를 터렛의 금액의 절반을 회수하고, null로 한다.\n\n    // 터렛의 범위에 FieldUnits의 상대 유닛이 들어오면 공격모션으로 변환 한다.\n    // 공격 속도에 맞게 투사체를 발사한다.\n    // 투사체는 상대 유닛에 적중하면 상대 유닛의 체력을 깎은 후 소멸한다.\n    return (\n        <Container location={location}>\n            <TurretImage ></TurretImage>\n            {\n                status.menu === \"add\" && status.tower[index] !== null ? <TargetImage src={targetImg}></TargetImage> : <div></div>\n            }\n            \n        </Container>\n    )\n}"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,OAAOC,SAAS,MAAM,yCAAyC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,YAAYC,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACC,IAAK;AACzC,cAAcF,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACE,MAAO;AAC7C;AACA,CAAC;AAACC,EAAA,GAVIN,SAAS;AAWf,MAAMO,WAAW,GAAGX,MAAM,CAACY,GAAI;AAC/B;AACA;AACA;AACA,yBAAyBN,KAAK,IAAIA,KAAK,CAACO,GAAG,GAAG,KAAM;AACpD,CAAC;AAACC,GAAA,GALIH,WAAW;AAMjB,MAAMI,WAAW,GAAGf,MAAM,CAACY,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACI,GAAA,GARID,WAAW;AAUjB,eAAe,SAASE,MAAMA,CAAC;EAACV,QAAQ;EAAEW,KAAK;EAAEC;AAAI,CAAC,EAAC;EAAAC,EAAA;EAEnD,MAAMC,MAAM,GAAGtB,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACD,MAAM,CAACF,IAAI,CAAC,CAAC;EACvD;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA,oBACIhB,OAAA,CAACC,SAAS;IAACG,QAAQ,EAAEA,QAAS;IAAAgB,QAAA,gBAC1BpB,OAAA,CAACQ,WAAW;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,EAExBN,MAAM,CAACO,IAAI,KAAK,KAAK,IAAIP,MAAM,CAACQ,KAAK,CAACX,KAAK,CAAC,KAAK,IAAI,gBAAGf,OAAA,CAACY,WAAW;MAACe,GAAG,EAAE7B;IAAU;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,gBAAGxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG9G,CAAC;AAEpB;AAACP,EAAA,CArBuBH,MAAM;EAAA,QAEXlB,WAAW;AAAA;AAAAgC,GAAA,GAFNd,MAAM;AAAA,IAAAP,EAAA,EAAAI,GAAA,EAAAE,GAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAlB,GAAA;AAAAkB,YAAA,CAAAhB,GAAA;AAAAgB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}