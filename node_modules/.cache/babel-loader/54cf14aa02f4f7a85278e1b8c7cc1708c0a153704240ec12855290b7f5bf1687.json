{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonsulee/MyFolder/BCSD/ageofwar/src/components/Field.js\",\n  _s = $RefreshSig$();\nimport { styled } from \"styled-components\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ally, enemy, fieldWidth } from \"../utils/data/dataSet\";\nimport Nexus from \"./nexus/Nexus\";\nimport Unit from \"./unit/Unit\";\n\n// export const unit = createSlice({\n//     name:\"unit\",\n//     initialState:[{\n//         id:Number(Date.now()),\n//         name:\"base\",\n//         team:\"ally\",\n//         maxHp:500,\n//         hp:400,\n//     },{\n//         id:Number(Date.now() + 10),\n//         name:\"base\",\n//         team:\"enemy\",\n//         maxHp:500,\n//         hp:500,\n//     }],\n//     reducers:{\n//         hit:(state, action)=>{\n//             const index = state.findIndex(obj => {\n//                 return Number(obj.id) === Number(action.index)\n//             })\n//             if(index > -1) state[index].hp = state[index].hp - action.damage\n//         },\n//         removeUnit:(state, action)=>{\n//             const index = state.findIndex(obj => {\n//                 return Number(obj.id) === Number(action.id)\n//             })\n//             state.splice(index, 1)\n//         },\n//         addUnit:(state, action)=>{\n//             state.push(action.data)\n//         },\n//         setIndex:(state, action)=>{\n//             state[action.index].index = action.index\n//         },\n//         setLegMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].leg = action.motion\n//         },\n//         setBodyMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].body = action.motion\n//         },\n//         setDeadMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].leg = action.motion\n//         }\n//     }\n// })\n// export const attacks = createSlice({\n//     name:\"attacks\",\n//     initialState:[],\n//     reducers:{\n//         addAttack:(state, action) => {\n//             state.push(action.data)\n//         },\n//         removeAttack:(state, action) => {\n//             const index = state.findIndex(e => e.id === action.index)\n//             state.splice(index, 1)\n//         }\n//     }\n// })\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    position: absolute;\n    left: -20px;\n    bottom: 50px;\n    width: ${fieldWidth + \"px\"};\n    height: 250px;\n    z-index: 2;\n    /* display: none; */\n`;\n_c = Container;\nexport default function Field() {\n  _s();\n  const fieldUnits = useSelector(state => state.fieldUnit);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Nexus, {\n      id: ally,\n      className: ally\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Nexus, {\n      id: enemy,\n      className: enemy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), fieldUnits.map((e, k) => /*#__PURE__*/_jsxDEV(Unit, {\n      id: e.id\n    }, e.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 42\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(Field, \"JzvLkkcWRgm6A2hKgslcs8rHHiA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c2 = Field;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Field\");","map":{"version":3,"names":["styled","createSlice","useDispatch","useSelector","ally","enemy","fieldWidth","Nexus","Unit","jsxDEV","_jsxDEV","Container","div","_c","Field","_s","fieldUnits","state","fieldUnit","dispatch","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","map","e","k","_c2","$RefreshReg$"],"sources":["/Users/hyeonsulee/MyFolder/BCSD/ageofwar/src/components/Field.js"],"sourcesContent":["import { styled } from \"styled-components\"\nimport {createSlice} from \"@reduxjs/toolkit\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ally, enemy, fieldWidth } from \"../utils/data/dataSet\"\nimport Nexus from \"./nexus/Nexus\";\nimport Unit from \"./unit/Unit\";\n\n// export const unit = createSlice({\n//     name:\"unit\",\n//     initialState:[{\n//         id:Number(Date.now()),\n//         name:\"base\",\n//         team:\"ally\",\n//         maxHp:500,\n//         hp:400,\n//     },{\n//         id:Number(Date.now() + 10),\n//         name:\"base\",\n//         team:\"enemy\",\n//         maxHp:500,\n//         hp:500,\n//     }],\n//     reducers:{\n//         hit:(state, action)=>{\n//             const index = state.findIndex(obj => {\n//                 return Number(obj.id) === Number(action.index)\n//             })\n//             if(index > -1) state[index].hp = state[index].hp - action.damage\n//         },\n//         removeUnit:(state, action)=>{\n//             const index = state.findIndex(obj => {\n//                 return Number(obj.id) === Number(action.id)\n//             })\n//             state.splice(index, 1)\n//         },\n//         addUnit:(state, action)=>{\n//             state.push(action.data)\n//         },\n//         setIndex:(state, action)=>{\n//             state[action.index].index = action.index\n//         },\n//         setLegMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].leg = action.motion\n//         },\n//         setBodyMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].body = action.motion\n//         },\n//         setDeadMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].leg = action.motion\n//         }\n//     }\n// })\n// export const attacks = createSlice({\n//     name:\"attacks\",\n//     initialState:[],\n//     reducers:{\n//         addAttack:(state, action) => {\n//             state.push(action.data)\n//         },\n//         removeAttack:(state, action) => {\n//             const index = state.findIndex(e => e.id === action.index)\n//             state.splice(index, 1)\n//         }\n//     }\n// })\n\nconst Container = styled.div`\n    position: absolute;\n    left: -20px;\n    bottom: 50px;\n    width: ${fieldWidth + \"px\"};\n    height: 250px;\n    z-index: 2;\n    /* display: none; */\n`;\n\nexport default function Field(){\n    \n    const fieldUnits = useSelector(state => state.fieldUnit)\n    const dispatch = useDispatch();\n    return (\n        <Container>\n            <Nexus id={ally} className={ally}></Nexus>\n            <Nexus id={enemy} className={enemy}></Nexus>\n            {\n                fieldUnits.map((e, k) => <Unit key={e.id} id={e.id}></Unit>)\n            }\n        </Container>\n    )\n}"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,mBAAmB;AAC1C,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,EAAEC,KAAK,EAAEC,UAAU,QAAQ,uBAAuB;AAC/D,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,IAAI,MAAM,aAAa;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGX,MAAM,CAACY,GAAI;AAC7B;AACA;AACA;AACA,aAAaN,UAAU,GAAG,IAAK;AAC/B;AACA;AACA;AACA,CAAC;AAACO,EAAA,GARIF,SAAS;AAUf,eAAe,SAASG,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAE3B,MAAMC,UAAU,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,SAAS,CAAC;EACxD,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,oBACIQ,OAAA,CAACC,SAAS;IAAAS,QAAA,gBACNV,OAAA,CAACH,KAAK;MAACc,EAAE,EAAEjB,IAAK;MAACkB,SAAS,EAAElB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1ChB,OAAA,CAACH,KAAK;MAACc,EAAE,EAAEhB,KAAM;MAACiB,SAAS,EAAEjB;IAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAExCV,UAAU,CAACW,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAAKnB,OAAA,CAACF,IAAI;MAAYa,EAAE,EAAEO,CAAC,CAACP;IAAG,GAAfO,CAAC,CAACP,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzD,CAAC;AAEpB;AAACX,EAAA,CAbuBD,KAAK;EAAA,QAENX,WAAW,EACbD,WAAW;AAAA;AAAA4B,GAAA,GAHRhB,KAAK;AAAA,IAAAD,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}