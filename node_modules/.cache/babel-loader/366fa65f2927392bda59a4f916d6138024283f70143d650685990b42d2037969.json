{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonsulee/MyFolder/BCSD/ageofwar/src/components/Field.js\",\n  _s = $RefreshSig$();\nimport { styled } from \"styled-components\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fieldWidth } from \"../utils/data/dataSet\";\n\n// export const unit = createSlice({\n//     name:\"unit\",\n//     initialState:[{\n//         id:Number(Date.now()),\n//         name:\"base\",\n//         team:\"ally\",\n//         maxHp:500,\n//         hp:400,\n//     },{\n//         id:Number(Date.now() + 10),\n//         name:\"base\",\n//         team:\"enemy\",\n//         maxHp:500,\n//         hp:500,\n//     }],\n//     reducers:{\n//         hit:(state, action)=>{\n//             const index = state.findIndex(obj => {\n//                 return Number(obj.id) === Number(action.index)\n//             })\n//             if(index > -1) state[index].hp = state[index].hp - action.damage\n//         },\n//         removeUnit:(state, action)=>{\n//             const index = state.findIndex(obj => {\n//                 return Number(obj.id) === Number(action.id)\n//             })\n//             state.splice(index, 1)\n//         },\n//         addUnit:(state, action)=>{\n//             state.push(action.data)\n//         },\n//         setIndex:(state, action)=>{\n//             state[action.index].index = action.index\n//         },\n//         setLegMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].leg = action.motion\n//         },\n//         setBodyMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].body = action.motion\n//         },\n//         setDeadMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].leg = action.motion\n//         }\n//     }\n// })\n// export const attacks = createSlice({\n//     name:\"attacks\",\n//     initialState:[],\n//     reducers:{\n//         addAttack:(state, action) => {\n//             state.push(action.data)\n//         },\n//         removeAttack:(state, action) => {\n//             const index = state.findIndex(e => e.id === action.index)\n//             state.splice(index, 1)\n//         }\n//     }\n// })\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    position: absolute;\n    background-color: blue;\n    left: 0px;\n    width: ${props => props.width + \"px\"};\n    height: 250px;\n    bottom: 130px;\n    z-index: 2;\n    /* display: none; */\n`;\n_c = Container;\nexport default function Field() {\n  _s();\n  const unitList = useSelector(state => state);\n  const attackList = useSelector(state => state.attacks);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    width: fieldWidth\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(Field, \"dEvRmMKlINuDpVBUO8JB2j/XLoQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c2 = Field;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Field\");","map":{"version":3,"names":["styled","createSlice","useDispatch","useSelector","fieldWidth","jsxDEV","_jsxDEV","Container","div","props","width","_c","Field","_s","unitList","state","attackList","attacks","dispatch","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/hyeonsulee/MyFolder/BCSD/ageofwar/src/components/Field.js"],"sourcesContent":["import { styled } from \"styled-components\"\nimport {createSlice} from \"@reduxjs/toolkit\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fieldWidth } from \"../utils/data/dataSet\"\n\n// export const unit = createSlice({\n//     name:\"unit\",\n//     initialState:[{\n//         id:Number(Date.now()),\n//         name:\"base\",\n//         team:\"ally\",\n//         maxHp:500,\n//         hp:400,\n//     },{\n//         id:Number(Date.now() + 10),\n//         name:\"base\",\n//         team:\"enemy\",\n//         maxHp:500,\n//         hp:500,\n//     }],\n//     reducers:{\n//         hit:(state, action)=>{\n//             const index = state.findIndex(obj => {\n//                 return Number(obj.id) === Number(action.index)\n//             })\n//             if(index > -1) state[index].hp = state[index].hp - action.damage\n//         },\n//         removeUnit:(state, action)=>{\n//             const index = state.findIndex(obj => {\n//                 return Number(obj.id) === Number(action.id)\n//             })\n//             state.splice(index, 1)\n//         },\n//         addUnit:(state, action)=>{\n//             state.push(action.data)\n//         },\n//         setIndex:(state, action)=>{\n//             state[action.index].index = action.index\n//         },\n//         setLegMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].leg = action.motion\n//         },\n//         setBodyMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].body = action.motion\n//         },\n//         setDeadMotion:(state, action)=> {\n//             state[state.findIndex(e => Number(e.id) === Number(action.id))].leg = action.motion\n//         }\n//     }\n// })\n// export const attacks = createSlice({\n//     name:\"attacks\",\n//     initialState:[],\n//     reducers:{\n//         addAttack:(state, action) => {\n//             state.push(action.data)\n//         },\n//         removeAttack:(state, action) => {\n//             const index = state.findIndex(e => e.id === action.index)\n//             state.splice(index, 1)\n//         }\n//     }\n// })\n\nconst Container = styled.div`\n    position: absolute;\n    background-color: blue;\n    left: 0px;\n    width: ${props => props.width + \"px\"};\n    height: 250px;\n    bottom: 130px;\n    z-index: 2;\n    /* display: none; */\n`;\n\nexport default function Field(){\n    \n    const unitList = useSelector(state => state)\n    const attackList = useSelector(state => state.attacks)\n    const dispatch = useDispatch();\n    return (\n        <Container width={fieldWidth}>\n            {/* <Attacks>\n                {\n                   attackList.map((e, k) => {\n                        return <Atteck key={k} index={k}></Atteck>\n                   }) \n                }\n            </Attacks> */}\n            {/* {\n                unitList.unit.filter(e => e.name === \"base\").map(e => {\n                    return <Base level={1} className={e.team} id={e.id}></Base>\n                })\n            }\n            {\n                unitList.unit.filter(e => e.name !== \"base\").map((e) => {\n                    return <FarUnit className={e.team} key={e.id} id={e.id}></FarUnit>\n                })\n            } */}\n        </Container>\n    )\n}"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,mBAAmB;AAC1C,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,uBAAuB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAI;AAC7B;AACA;AACA;AACA,aAAaC,KAAK,IAAIA,KAAK,CAACC,KAAK,GAAG,IAAK;AACzC;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GATIJ,SAAS;AAWf,eAAe,SAASK,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAE3B,MAAMC,QAAQ,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAAC;EAC5C,MAAMC,UAAU,GAAGb,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACE,OAAO,CAAC;EACtD,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,oBACII,OAAA,CAACC,SAAS;IAACG,KAAK,EAAEN;EAAW;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAkBlB,CAAC;AAEpB;AAACT,EAAA,CA1BuBD,KAAK;EAAA,QAERT,WAAW,EACTA,WAAW,EACbD,WAAW;AAAA;AAAAqB,GAAA,GAJRX,KAAK;AAAA,IAAAD,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}