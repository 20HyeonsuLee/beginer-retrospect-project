{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonsulee/MyFolder/BCSD/ageofwar/src/components/turret/Turret.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { styled } from \"styled-components\";\nimport targetImg from \"../../assets/images/turrets//target.png\";\nimport { selectedTower } from \"../../store/slices/selectedTurret\";\nimport { status } from \"../../store/slices/status\";\nimport { ally, enemy, fieldWidth } from \"../../utils/data/dataSet\";\nimport { useEffect, useRef } from \"react\";\nimport { rangeCheck } from \"../../utils/functions/isRange\";\nimport attacks from \"../../store/slices/attacks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    display: flex;\n    position: absolute;\n    align-items: center;\n    justify-content: center;\n    width: 55px;\n    height: 55px;\n    left: ${props => props.location.left};\n    bottom: ${props => props.location.bottom};\n    z-index: 3;\n`;\n_c = Container;\nconst TurretImage = styled.img`\n    position: absolute;\n    width: 140px;\n    height: 140px;\n    transform: rotate( ${props => props.deg + \"deg\"});\n`;\n_c2 = TurretImage;\nconst TargetImage = styled.img`\n    position: absolute;\n    width: 55px;\n    height: 55px;\n    z-index: 10;\n    &:hover{\n        background-color: rgba(240, 240, 240, 0.5);\n    }\n    display: ${props => {\n  if (props.menu === \"add\") {\n    if (props.towerInfo === null) return \"block\";else return \"none\";\n  } else if (props.menu === \"cell\") {\n    if (props.towerInfo !== null) return \"block\";else return \"none\";\n  } else {\n    return \"none\";\n  }\n}};\n`;\n_c3 = TargetImage;\nexport default function Turret({\n  location,\n  menu,\n  team,\n  turretInfo,\n  index\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const selectedTurret = useSelector(state => state.selectedTurret);\n  const fieldUnits = useSelector(state => state.fieldUnit);\n  const turret = useSelector(state => state.status[team].tower[index]);\n  const turretRef = useRef(null);\n  const _ = require(\"lodash\");\n  useEffect(() => {\n    if (turretInfo !== null) {\n      const element = turretRef.current;\n      const left = element.parentElement.offsetLeft + element.offsetLeft;\n      const location = {\n        x: left,\n        y: element.offsetTop,\n        left: left,\n        right: fieldWidth - left - element.offsetWidth,\n        top: element.offsetTop,\n        bottom: element.offsetBottom,\n        centerX: left + element.offsetWidth / 2\n      };\n      if (rangeCheck(fieldUnits, {\n        id: null,\n        location: location\n      }, Number(!team), turretInfo.range) > -1) {\n        dispatch(status.actions.setMotion({\n          team: team,\n          index: index,\n          motion: \"공격\"\n        }));\n        // 공격일 때 투사체 발사해야하는데 투사체의 애니메이션 좌표를 어떻게 줄것인가....\n      } else {\n        dispatch(status.actions.setMotion({\n          team: team,\n          index: index,\n          motion: \"대기\"\n        }));\n      }\n    }\n  }, [fieldUnits]);\n  useEffect(() => {\n    let interval = null;\n    if (turret.attackMotion === \"공격\") {\n      interval = setInterval(() => {\n        // 이부분 수정 필요!\n        dispatch(attacks.actions.addAttack({\n          attack: turret\n        }));\n      }, turret.attackMotion.attackLongSpeed);\n    }\n    return () => clearInterval(interval);\n  }, [turret]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    ref: turretRef,\n    location: location,\n    children: [turretInfo !== null && turretInfo !== undefined ? /*#__PURE__*/_jsxDEV(TurretImage, {\n      src: require(\"../../assets/images/turrets/level\" + turretInfo.level + \"/turret\" + turretInfo.turret + \"/\" + turretInfo.attackMotion + \".gif\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 64\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 237\n    }, this), /*#__PURE__*/_jsxDEV(TargetImage, {\n      src: targetImg,\n      menu: menu,\n      towerInfo: turretInfo,\n      onClick: e => {\n        if (menu === \"add\") {\n          const turret = _.clone(selectedTurret);\n          turret.team = enemy;\n          dispatch(status.actions.setTurret({\n            index: index,\n            turret: selectedTurret,\n            team: team\n          }));\n          dispatch(status.actions.setTurret({\n            index: index,\n            turret: turret,\n            team: Number(!team)\n          }));\n          dispatch(status.actions.setMenu({\n            menu: \"main\"\n          }));\n        } else {\n          dispatch(status.actions.removeTurret({\n            index: index,\n            team: team\n          }));\n          dispatch(status.actions.setMenu({\n            menu: \"main\"\n          }));\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n_s(Turret, \"LvWWWvD3fnVE3V54GYLDCTqdKYg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c4 = Turret;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TurretImage\");\n$RefreshReg$(_c3, \"TargetImage\");\n$RefreshReg$(_c4, \"Turret\");","map":{"version":3,"names":["useDispatch","useSelector","styled","targetImg","selectedTower","status","ally","enemy","fieldWidth","useEffect","useRef","rangeCheck","attacks","jsxDEV","_jsxDEV","Container","div","props","location","left","bottom","_c","TurretImage","img","deg","_c2","TargetImage","menu","towerInfo","_c3","Turret","team","turretInfo","index","_s","dispatch","selectedTurret","state","fieldUnits","fieldUnit","turret","tower","turretRef","_","require","element","current","parentElement","offsetLeft","x","y","offsetTop","right","offsetWidth","top","offsetBottom","centerX","id","Number","range","actions","setMotion","motion","interval","attackMotion","setInterval","addAttack","attack","attackLongSpeed","clearInterval","ref","children","undefined","src","level","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","clone","setTurret","setMenu","removeTurret","_c4","$RefreshReg$"],"sources":["/Users/hyeonsulee/MyFolder/BCSD/ageofwar/src/components/turret/Turret.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { styled } from \"styled-components\";\nimport targetImg from \"../../assets/images/turrets//target.png\"\nimport { selectedTower } from \"../../store/slices/selectedTurret\";\nimport { status } from \"../../store/slices/status\";\nimport { ally, enemy, fieldWidth } from \"../../utils/data/dataSet\";\nimport { useEffect, useRef } from \"react\";\nimport { rangeCheck } from \"../../utils/functions/isRange\";\nimport attacks from \"../../store/slices/attacks\"\n\nconst Container = styled.div`\n    display: flex;\n    position: absolute;\n    align-items: center;\n    justify-content: center;\n    width: 55px;\n    height: 55px;\n    left: ${props => props.location.left};\n    bottom: ${props => props.location.bottom};\n    z-index: 3;\n`;\nconst TurretImage = styled.img`\n    position: absolute;\n    width: 140px;\n    height: 140px;\n    transform: rotate( ${props => props.deg + \"deg\"});\n`;\nconst TargetImage = styled.img`\n    position: absolute;\n    width: 55px;\n    height: 55px;\n    z-index: 10;\n    &:hover{\n        background-color: rgba(240, 240, 240, 0.5);\n    }\n    display: ${props =>{\n        if(props.menu === \"add\"){\n            if(props.towerInfo === null)\n                return \"block\"\n            else\n                return \"none\"\n        }else if(props.menu === \"cell\"){\n            if(props.towerInfo !== null)\n                return \"block\"\n            else\n                return \"none\"\n        }else{\n            return \"none\"\n        }\n    }};\n`;\n\nexport default function Turret({location, menu, team, turretInfo, index}){\n\n    const dispatch = useDispatch();\n    const selectedTurret = useSelector(state => state.selectedTurret)\n    const fieldUnits = useSelector(state => state.fieldUnit)\n    const turret = useSelector(state => state.status[team].tower[index])\n    const turretRef = useRef(null);\n    const _ = require(\"lodash\")\n\n    useEffect(() => {\n        \n        if(turretInfo !== null){\n            const element = turretRef.current\n            const left = element.parentElement.offsetLeft + element.offsetLeft\n            \n            const location = {\n                x:left,\n                y:element.offsetTop,\n                left:left,\n                right:fieldWidth - left - element.offsetWidth,\n                top:element.offsetTop,\n                bottom:element.offsetBottom,\n                centerX:left + element.offsetWidth / 2,\n            }\n            if(rangeCheck(fieldUnits, {id:null, location:location}, Number(!team), turretInfo.range) > -1){\n                dispatch(status.actions.setMotion({team:team, index:index, motion:\"공격\"}))\n                // 공격일 때 투사체 발사해야하는데 투사체의 애니메이션 좌표를 어떻게 줄것인가....\n            }else{\n                dispatch(status.actions.setMotion({team:team, index:index, motion:\"대기\"}))\n            }\n        }\n\n    }, [fieldUnits])\n\n    useEffect(() => {\n\n        let interval = null\n        \n        if(turret.attackMotion === \"공격\"){\n            \n            interval = setInterval(() => {\n                // 이부분 수정 필요!\n                dispatch(attacks.actions.addAttack({attack:turret}))\n            }, turret.attackMotion.attackLongSpeed);\n        }\n\n        return () => clearInterval(interval)\n\n    }, [turret])\n\n    return (\n        <Container ref={turretRef} location={location}>\n            {turretInfo !== null && turretInfo !== undefined ? <TurretImage src={require(\"../../assets/images/turrets/level\" + turretInfo.level + \"/turret\" + turretInfo.turret + \"/\" + turretInfo.attackMotion + \".gif\")}></TurretImage> : <div></div>}\n            <TargetImage src={targetImg} menu={menu} towerInfo={turretInfo} onClick={e => {\n                if(menu === \"add\") {\n                    const turret = _.clone(selectedTurret)\n                    turret.team = enemy\n                    dispatch(status.actions.setTurret({index:index, turret:selectedTurret, team:team}))\n                    dispatch(status.actions.setTurret({index:index, turret:turret, team:Number(!team)}))\n                    dispatch(status.actions.setMenu({menu:\"main\"}))\n                } else {\n                    dispatch(status.actions.removeTurret({index:index, team:team}))\n                    dispatch(status.actions.setMenu({menu:\"main\"}))\n                }\n            }}></TargetImage>\n        </Container>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}